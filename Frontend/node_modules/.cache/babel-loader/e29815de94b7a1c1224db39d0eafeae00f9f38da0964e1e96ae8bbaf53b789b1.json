{"ast":null,"code":"var _jsxFileName = \"D:\\\\Th\\u1EF1c t\\u1EADp\\\\Travel-Tour\\\\Frontend\\\\src\\\\components\\\\Admin\\\\TourManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TourManagement = () => {\n  _s();\n  const [tours, setTours] = useState([]);\n  const [newTour, setNewTour] = useState({\n    name: '',\n    description: '',\n    price: ''\n  });\n  const [editingTour, setEditingTour] = useState(null);\n  useEffect(() => {\n    // Fetch tours from an API or database\n    const fetchTours = async () => {\n      // Replace with your API call\n      const response = await fetch('/api/tours');\n      const data = await response.json();\n      setTours(data);\n    };\n    fetchTours();\n  }, []);\n  const handleAddTour = async () => {\n    // Add tour to the database\n    const response = await fetch('/api/tours', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTour)\n    });\n    const addedTour = await response.json();\n    setTours([...tours, addedTour]);\n    setNewTour({\n      name: '',\n      description: '',\n      price: ''\n    });\n  };\n  const handleEditTour = async tour => {\n    setEditingTour(tour);\n    setNewTour({\n      name: tour.name,\n      description: tour.description,\n      price: tour.price\n    });\n  };\n  const handleUpdateTour = async () => {\n    // Update tour in the database\n    const response = await fetch(`/api/tours/${editingTour.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTour)\n    });\n    const updatedTour = await response.json();\n    setTours(tours.map(tour => tour.id === updatedTour.id ? updatedTour : tour));\n    setEditingTour(null);\n    setNewTour({\n      name: '',\n      description: '',\n      price: ''\n    });\n  };\n  const handleDeleteTour = async id => {\n    // Delete tour from the database\n    await fetch(`/api/tours/${id}`, {\n      method: 'DELETE'\n    });\n    setTours(tours.filter(tour => tour.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tour Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tour Name\",\n        value: newTour.name,\n        onChange: e => setNewTour({\n          ...newTour,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newTour.description,\n        onChange: e => setNewTour({\n          ...newTour,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Price\",\n        value: newTour.price,\n        onChange: e => setNewTour({\n          ...newTour,\n          price: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), editingTour ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTour,\n        children: \"Update Tour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTour,\n        children: \"Add Tour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tours.map(tour => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: tour.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tour.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", tour.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTour(tour),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTour(tour.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, tour.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(TourManagement, \"zNxxhE6eg9BUqBpp8UQD96K7irg=\");\n_c = TourManagement;\nexport default TourManagement;\nvar _c;\n$RefreshReg$(_c, \"TourManagement\");","map":{"version":3,"names":["React","useState","useEffect","TourManagement","tours","setTours","newTour","setNewTour","name","description","price","editingTour","setEditingTour","fetchTours","response","fetch","data","json","handleAddTour","method","headers","body","JSON","stringify","addedTour","handleEditTour","tour","handleUpdateTour","id","updatedTour","map","handleDeleteTour","filter","e","target","value"],"sources":["D:/Thực tập/Travel-Tour/Frontend/src/components/Admin/TourManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TourManagement = () => {\r\n    const [tours, setTours] = useState([]);\r\n    const [newTour, setNewTour] = useState({ name: '', description: '', price: '' });\r\n    const [editingTour, setEditingTour] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch tours from an API or database\r\n        const fetchTours = async () => {\r\n            // Replace with your API call\r\n            const response = await fetch('/api/tours');\r\n            const data = await response.json();\r\n            setTours(data);\r\n        };\r\n        fetchTours();\r\n    }, []);\r\n\r\n    const handleAddTour = async () => {\r\n        // Add tour to the database\r\n        const response = await fetch('/api/tours', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(newTour),\r\n        });\r\n        const addedTour = await response.json();\r\n        setTours([...tours, addedTour]);\r\n        setNewTour({ name: '', description: '', price: '' });\r\n    };\r\n\r\n    const handleEditTour = async (tour) => {\r\n        setEditingTour(tour);\r\n        setNewTour({ name: tour.name, description: tour.description, price: tour.price });\r\n    };\r\n\r\n    const handleUpdateTour = async () => {\r\n        // Update tour in the database\r\n        const response = await fetch(`/api/tours/${editingTour.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(newTour),\r\n        });\r\n        const updatedTour = await response.json();\r\n        setTours(tours.map(tour => (tour.id === updatedTour.id ? updatedTour : tour)));\r\n        setEditingTour(null);\r\n        setNewTour({ name: '', description: '', price: '' });\r\n    };\r\n\r\n    const handleDeleteTour = async (id) => {\r\n        // Delete tour from the database\r\n        await fetch(`/api/tours/${id}`, { method: 'DELETE' });\r\n        setTours(tours.filter(tour => tour.id !== id));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Tour Management</h2>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Tour Name\"\r\n                    value={newTour.name}\r\n                    onChange={(e) => setNewTour({ ...newTour, name: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    value={newTour.description}\r\n                    onChange={(e) => setNewTour({ ...newTour, description: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Price\"\r\n                    value={newTour.price}\r\n                    onChange={(e) => setNewTour({ ...newTour, price: e.target.value })}\r\n                />\r\n                {editingTour ? (\r\n                    <button onClick={handleUpdateTour}>Update Tour</button>\r\n                ) : (\r\n                    <button onClick={handleAddTour}>Add Tour</button>\r\n                )}\r\n            </div>\r\n            <ul>\r\n                {tours.map(tour => (\r\n                    <li key={tour.id}>\r\n                        <h3>{tour.name}</h3>\r\n                        <p>{tour.description}</p>\r\n                        <p>Price: {tour.price}</p>\r\n                        <button onClick={() => handleEditTour(tour)}>Edit</button>\r\n                        <button onClick={() => handleDeleteTour(tour.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TourManagement;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}